# Author: Almero Gouws <14366037@sun.ac.za>
"""
"""
"""Import the required numerical modules"""
import numpy as np

def sprinkler_evidence():
    all_ev = [[None, None, None, None],
             [None, None, None, 0],
             [None, None, None, 1],
             [None, None, 0, None],
             [None, None, 0, 0],
             [None, None, 0, 1],
             [None, None, 1, None],
             [None, None, 1, 0],
             [None, None, 1, 1],
             [None, 0, None, None],
             [None, 0, None, 0],
             [None, 0, None, 1],
             [None, 0, 0, None],
             [None, 0, 0, 0],
             [None, 0, 0, 1],
             [None, 0, 1, None],
             [None, 0, 1, 0],
             [None, 0, 1, 1],
             [None, 1, None, None],
             [None, 1, None, 0],
             [None, 1, None, 1],
             [None, 1, 0, None],
             [None, 1, 0, 0],
             [None, 1, 0, 1],
             [None, 1, 1, None],
             [None, 1, 1, 0],
             [None, 1, 1, 1],
             [0, None, None, None],
             [0, None, None, 0],
             [0, None, None, 1],
             [0, None, 0, None],
             [0, None, 0, 0],
             [0, None, 0, 1],
             [0, None, 1, None],
             [0, None, 1, 0],
             [0, None, 1, 1],
             [0, 0, None, None],
             [0, 0, None, 0],
             [0, 0, None, 1],
             [0, 0, 0, None],
             [0, 0, 0, 0],
             [0, 0, 0, 1],
             [0, 0, 1, None],
             [0, 0, 1, 0],
             [0, 0, 1, 1],
             [0, 1, None, None],
             [0, 1, None, 0],
             [0, 1, None, 1],
             [0, 1, 0, None],
             [0, 1, 0, 0],
             [0, 1, 0, 1],
             [0, 1, 1, None],
             [0, 1, 1, 0],
             [0, 1, 1, 1],
             [1, None, None, None],
             [1, None, None, 0],
             [1, None, None, 1],
             [1, None, 0, None],
             [1, None, 0, 0],
             [1, None, 0, 1],
             [1, None, 1, None],
             [1, None, 1, 0],
             [1, None, 1, 1],
             [1, 0, None, None],
             [1, 0, None, 0],
             [1, 0, None, 1],
             [1, 0, 0, None],
             [1, 0, 0, 0],
             [1, 0, 0, 1],
             [1, 0, 1, None],
             [1, 0, 1, 0],
             [1, 0, 1, 1],
             [1, 1, None, None],
             [1, 1, None, 0],
             [1, 1, None, 1],
             [1, 1, 0, None],
             [1, 1, 0, 0],
             [1, 1, 0, 1],
             [1, 1, 1, None],
             [1, 1, 1, 0],
             [1, 1, 1, 1]]
    return all_ev

def sprinkler_mpe():
    all_mpe = [[1, 0, 1, 1],
            [0, 0, 0, 0],
            [1, 0, 1, 1],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 1, 0, 1],
            [1, 0, 1, 1],
            [1, 0, 1, 0],
            [1, 0, 1, 1],
            [1, 0, 1, 1],
            [0, 0, 0, 0],
            [1, 0, 1, 1],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 1],
            [1, 0, 1, 1],
            [1, 0, 1, 0],
            [1, 0, 1, 1],
            [0, 1, 0, 1],
            [0, 1, 0, 0],
            [0, 1, 0, 1],
            [0, 1, 0, 1],
            [0, 1, 0, 0],
            [0, 1, 0, 1],
            [0, 1, 1, 1],
            [0, 1, 1, 0],
            [0, 1, 1, 1],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 1, 0, 1],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 1, 0, 1],
            [0, 1, 1, 1],
            [0, 0, 1, 0],
            [0, 1, 1, 1],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 1, 1],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 1],
            [0, 0, 1, 1],
            [0, 0, 1, 0],
            [0, 0, 1, 1],
            [0, 1, 0, 1],
            [0, 1, 0, 0],
            [0, 1, 0, 1],
            [0, 1, 0, 1],
            [0, 1, 0, 0],
            [0, 1, 0, 1],
            [0, 1, 1, 1],
            [0, 1, 1, 0],
            [0, 1, 1, 1],
            [1, 0, 1, 1],
            [1, 0, 0, 0],
            [1, 0, 1, 1],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 1, 0, 1],
            [1, 0, 1, 1],
            [1, 0, 1, 0],
            [1, 0, 1, 1],
            [1, 0, 1, 1],
            [1, 0, 0, 0],
            [1, 0, 1, 1],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 0, 0, 1],
            [1, 0, 1, 1],
            [1, 0, 1, 0],
            [1, 0, 1, 1],
            [1, 1, 1, 1],
            [1, 1, 0, 0],
            [1, 1, 1, 1],
            [1, 1, 0, 1],
            [1, 1, 0, 0],
            [1, 1, 0, 1],
            [1, 1, 1, 1],
            [1, 1, 1, 0],
            [1, 1, 1, 1]]

    return all_mpe

def sprinkler_probs():
    all_prob = [[0.5000, 0.3000, 0.5000, 0.6471],
                [0.3610, 0.0621, 0.1187, 1.0000],
                [0.5758, 0.4298, 0.7079, 1.0000],
                [0.2000, 0.4200, 1.0000, 0.3780],
                [0.2926, 0.0675, 1.0000, 1.0000],
                [0.0476, 1.0000, 1.0000, 1.0000],
                [0.8000, 0.1800, 1.0000, 0.9162],
                [0.8687, 0.0215, 1.0000, 1.0000],
                [0.7937, 0.1945, 1.0000, 1.0000],
                [0.6429, 1.0000, 0.5857, 0.5271],
                [0.3807, 1.0000, 0.1239, 1.0000],
                [0.8780, 1.0000, 1.0000, 1.0000],
                [0.3103, 1.0000, 1.0000, 0     ],
                [0.3103, 1.0000, 1.0000, 1.0000],
                [     0, 1.0000, 1.0000, 1.0000],
                [0.8780, 1.0000, 1.0000, 0.9000],
                [0.8780, 1.0000, 1.0000, 1.0000],
                [0.8780, 1.0000, 1.0000, 1.0000],
                [0.1667, 1.0000, 0.3000, 0.9270],
                [0.0639, 1.0000, 0.0411, 1.0000],
                [0.1748, 1.0000, 0.3204, 1.0000],
                [0.0476, 1.0000, 1.0000, 0.9000],
                [0.0476, 1.0000, 1.0000, 1.0000],
                [0.0476, 1.0000, 1.0000, 1.0000],
                [0.4444, 1.0000, 1.0000, 0.9900],
                [0.4444, 1.0000, 1.0000, 1.0000],
                [0.4444, 1.0000, 1.0000, 1.0000],
                [1.0000, 0.5000, 0.2000, 0.5490],
                [1.0000, 0.0909, 0.0244, 1.0000],
                [1.0000, 0.8361, 0.3443, 1.0000],
                [1.0000, 0.5000, 1.0000, 0.4500],
                [1.0000, 0.0909, 1.0000, 1.0000],
                [1.0000, 1.0000, 1.0000, 1.0000],
                [1.0000, 0.5000, 1.0000, 0.9450],
                [1.0000, 0.0909, 1.0000, 1.0000],
                [1.0000, 0.5238, 1.0000, 1.0000],
                [1.0000, 1.0000, 0.2000, 0.1800],
                [1.0000, 1.0000, 0.0244, 1.0000],
                [1.0000, 1.0000, 1.0000, 1.0000],
                [1.0000, 1.0000, 1.0000, 0     ],
                [1.0000, 1.0000, 1.0000, 1.0000],
                [1.0000, 1.0000, 1.0000, 1.0000],
                [1.0000, 1.0000, 1.0000, 0.9000],
                [1.0000, 1.0000, 1.0000, 1.0000],
                [1.0000, 1.0000, 1.0000, 1.0000],
                [1.0000, 1.0000, 0.2000, 0.9180],
                [1.0000, 1.0000, 0.0244, 1.0000],
                [1.0000, 1.0000, 0.2157, 1.0000],
                [1.0000, 1.0000, 1.0000, 0.9000],
                [1.0000, 1.0000, 1.0000, 1.0000],
                [1.0000, 1.0000, 1.0000, 1.0000],
                [1.0000, 1.0000, 1.0000, 0.9900],
                [1.0000, 1.0000, 1.0000, 1.0000],
                [1.0000, 1.0000, 1.0000, 1.0000],
                [1.0000, 0.1000, 0.8000, 0.7452],
                [1.0000, 0.0110, 0.2857, 1.0000],
                [1.0000, 0.1304, 0.9758, 1.0000],
                [1.0000, 0.1000, 1.0000, 0.0900],
                [1.0000, 0.0110, 1.0000, 1.0000],
                [1.0000, 1.0000, 1.0000, 1.0000],
                [1.0000, 0.1000, 1.0000, 0.9090],
                [1.0000, 0.0110, 1.0000, 1.0000],
                [1.0000, 0.1089, 1.0000, 1.0000],
                [1.0000, 1.0000, 0.8000, 0.7200],
                [1.0000, 1.0000, 0.2857, 1.0000],
                [1.0000, 1.0000, 1.0000, 1.0000],
                [1.0000, 1.0000, 1.0000, 0     ],
                [1.0000, 1.0000, 1.0000, 1.0000],
                [1.0000, 1.0000, 1.0000, 1.0000],
                [1.0000, 1.0000, 1.0000, 0.9000],
                [1.0000, 1.0000, 1.0000, 1.0000],
                [1.0000, 1.0000, 1.0000, 1.0000],
                [1.0000, 1.0000, 0.8000, 0.9720],
                [1.0000, 1.0000, 0.2857, 1.0000],
                [1.0000, 1.0000, 0.8148, 1.0000],
                [1.0000, 1.0000, 1.0000, 0.9000],
                [1.0000, 1.0000, 1.0000, 1.0000],
                [1.0000, 1.0000, 1.0000, 1.0000],
                [1.0000, 1.0000, 1.0000, 0.9900],
                [1.0000, 1.0000, 1.0000, 1.0000],
                [1.0000, 1.0000, 1.0000, 1.0000]]
    return all_prob
